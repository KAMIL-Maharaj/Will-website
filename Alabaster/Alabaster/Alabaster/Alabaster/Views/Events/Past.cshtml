@model List<Alabaster.Models.UpcomingEvent>

@{
    ViewData["Title"] = "Past Events";
}

<style>
    body {
        background: url('../images/Background4.jpg') no-repeat center center fixed;
        background-size: cover;
        font-family: 'Poppins', 'Segoe UI', sans-serif;
        color: #fff;
        margin: 0;
        padding: 0;
    }

    /* Outer wrapper to prevent extra space */
    .page-wrapper {
        overflow: hidden; /* prevents extra space caused by scaling */
        padding-top: 20px;
    }

    /* Page overlay with scale */
    .page-overlay {
        transform: scale(0.85);
        transform-origin: top center;
        margin: 0 auto;
        width: 100%;
    }

    .page-overlay h2 {
        font-size: 2rem;
        font-weight: 900;
        text-align: center;
        margin-bottom: 20px;
        color: #fff;
        text-shadow: 2px 2px 10px rgba(0,0,0,0.7);
    }

    .top-button {
        display: inline-block;
        margin-bottom: 25px;
        background: linear-gradient(135deg, #0072ff, #00c6ff);
        border: none;
        border-radius: 22px;
        padding: 10px 18px;
        font-weight: 700;
        font-size: 0.9rem;
        color: #fff;
        text-decoration: none;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .top-button:hover {
        transform: translateY(-2px);
        box-shadow: 0px 6px 14px rgba(0,0,0,0.55);
        color: #fff;
        text-decoration: none;
    }

    .event-card {
        border: none;
        border-radius: 18px;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.12);
        backdrop-filter: blur(16px);
        box-shadow: 0 12px 28px rgba(0,0,0,0.55);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        color: #fff;
        display: flex;
        flex-direction: column;
        height: 100%;
    }
    .event-card:hover {
        transform: translateY(-6px);
        box-shadow: 0 18px 36px rgba(0,0,0,0.65);
    }

    .image-wrapper {
        position: relative;
        width: 100%;
        padding-top: 65%;
        overflow: hidden;
    }
    .image-wrapper img {
        position: absolute;
        top: 0; left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .card-body {
        flex: 1;
        padding: 18px;
        background: rgba(0, 0, 0, 0.35);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border-radius: 0 0 18px 18px;
    }
    .card-body h5 {
        font-size: 1.25rem;
        font-weight: 900;
        margin-bottom: 10px;
        text-align: center;
        color: #ffffff;
        text-shadow: 1px 1px 6px rgba(0,0,0,0.7);
    }
    .card-body p {
        font-size: 0.88rem;
        margin-bottom: 8px;
        color: #f0f0f0;
        text-align: left;
    }

    @@media (max-width: 992px) {
        .page-overlay h2 {
            font-size: 1.85rem;
        }
    }
    @@media (max-width: 768px) {
        .page-overlay h2 {
            font-size: 1.5rem;
        }
        .card-body h5 {
            font-size: 1.1rem;
        }
        .card-body p {
            font-size: 0.82rem;
        }
    }
</style>

<div class="page-wrapper">
    <div class="page-overlay">
        <div class="container text-center">
            <h2>ðŸ“œ Past Events</h2>

            <a href="@Url.Action("Index", "Events")" class="top-button">â¬… Back to Upcoming Events</a>

            @if (Model != null && Model.Any())
            {
                <div class="row mt-3">
                    @foreach (var evt in Model)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card event-card shadow-lg">
                                @if (!string.IsNullOrEmpty(evt.ImageUrl))
                                {
                                    <div class="image-wrapper">
                                        <img src="@evt.ImageUrl" alt="@evt.Name" />
                                    </div>
                                }
                                <div class="card-body">
                                    <h5 class="card-title">@evt.Name</h5>
                                    <p>@evt.Description</p>
                                    <p><strong>Date:</strong> @(DateTime.TryParse(evt.Date, out var dt) ? dt.ToString("MMMM dd, yyyy") : evt.Date)</p>
                                    <p><strong>Time:</strong> @evt.Time</p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info text-center text-white-50">
                    No past events found.
                </div>
            }
        </div>
    </div>
</div>
