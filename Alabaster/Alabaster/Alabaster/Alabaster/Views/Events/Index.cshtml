@model List<Alabaster.Models.UpcomingEvent>

@{
    ViewData["Title"] = "Upcoming Events";
}

<style>
/* Full background image */
body {
    background: url('../images/Background4.jpg') no-repeat center center fixed;
    background-size: cover;
    font-family: 'Poppins', 'Segoe UI', sans-serif;
    color: #fff;
}

/* Scale down entire page content */
.page-overlay {
    transform: scale(0.8);
    transform-origin: top center; /* keeps it centered */
    margin: 0 auto;
}

/* Page heading */
.page-overlay h2 {
    font-size: 2rem;
    font-weight: 900;
    text-align: center;
    margin-bottom: 28px;
    color: #ffffff;
    text-shadow: 1.5px 1.5px 8px rgba(0,0,0,0.7);
}

/* Top buttons */
.top-buttons a {
    margin-right: 10px;
    border-radius: 20px;
    font-weight: 700;
    padding: 8px 18px;
    font-size: 0.8rem;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.top-buttons a:hover {
    transform: translateY(-2px);
    box-shadow: 0px 4px 12px rgba(0,0,0,0.4);
}

/* Event cards */
.event-card {
    border: none;
    border-radius: 16px;
    overflow: hidden;
    background: rgba(255, 255, 255, 0.12);
    backdrop-filter: blur(18px);
    box-shadow: 0 14px 28px rgba(0,0,0,0.55);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    color: #fff;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.event-card:hover {
    transform: translateY(-7px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.65);
}

/* Image wrapper with aspect ratio */
.image-wrapper {
    position: relative;
    width: 100%;
    padding-top: 65%;
    overflow: hidden;
}

.image-wrapper img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

/* Card body */
.card-body {
    flex: 1;
    padding: 15px;
}
.card-body h5 {
    font-size: 1.1rem;
    font-weight: 800;
    margin-bottom: 12px;
    color: #ffffff;
    text-shadow: 1px 1px 4px rgba(0,0,0,0.5);
}
.card-body p {
    font-size: 0.8rem;
    margin-bottom: 8px;
    color: #e0e0e0;
}

/* Volunteer button */
.btn-custom {
    background: linear-gradient(135deg, #0072ff, #00c6ff);
    border: none;
    border-radius: 20px;
    padding: 7px 15px;
    font-weight: 700;
    font-size: 0.75rem;
    color: #fff;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.btn-custom:hover {
    transform: translateY(-2px);
    box-shadow: 0px 6px 14px rgba(0,0,0,0.55);
    color: #fff;
}

/* Responsive */
@@media (max-width: 992px) {
    .page-overlay {
        transform: scale(1); /* reset scaling on tablets/mobile */
    }
    .top-buttons {
        text-align: center;
        margin-bottom: 20px;
    }
}
@@media (max-width: 768px) {
    .page-overlay h2 {
        font-size: 1.6rem;
    }
}
</style>

<div class="page-overlay">
    <div class="container">
        <h2>üåü Upcoming Events üåü</h2>

        <div class="text-center top-buttons mb-4">
            @if (Context.Session.GetString("IsAdmin") == "true")
            {
                <a href="@Url.Action("AddEvent", "Events")" class="btn btn-primary">‚ûï Add Event</a>
            }
            <a href="@Url.Action("Past", "Events")" class="btn btn-warning text-dark">üìú View Past Events</a>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="row">
                @foreach (var evt in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card event-card shadow-lg">
                            @if (!string.IsNullOrEmpty(evt.ImageUrl))
                            {
                                <div class="image-wrapper">
                                    <img src="@evt.ImageUrl" alt="@evt.Name" />
                                </div>
                            }
                            <div class="card-body">
                                <h5 class="card-title">@evt.Name</h5>
                                <p>@evt.Description</p>
                                <p><strong>Date:</strong> @(DateTime.TryParse(evt.Date, out var dt) ? dt.ToString("MMMM dd, yyyy") : evt.Date)</p>
                                <p><strong>Time:</strong> @evt.Time</p>
                                <a href="@Url.Action("Volunteer", "Events", new { eventId = evt.Id })" class="btn btn-custom">ü§ù Volunteer</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info text-center">
                No upcoming events available at the moment.
            </div>
        }
    </div>
</div>