@model List<Alabaster.Models.UpcomingEvent>

@{
    ViewData["Title"] = "Upcoming Events";
}

<style>
/* Full background image */
body {
    background: url('../images/Background4.jpg') no-repeat center center fixed;
    background-size: cover;
    font-family: 'Poppins', 'Segoe UI', sans-serif;
    color: #fff;
    font-size: 11px; /* scaled down from ~16px */
}

/* Page heading */
.page-overlay h2 {
    font-size: 2.1rem; /* 3rem -> scaled down 30% */
    font-weight: 900;
    text-align: center;
    margin-bottom: 28px; /* 40px -> scaled */
    color: #ffffff;
    text-shadow: 1.4px 1.4px 7px rgba(0,0,0,0.7); /* scaled */
}

/* Top buttons */
.top-buttons a {
    margin-right: 10px; /* 15px -> scaled */
    border-radius: 21px; /* 30px -> scaled */
    font-weight: 700;
    padding: 7px 17px; /* 10px/25px -> scaled */
    font-size: 0.7rem; /* 1rem -> scaled */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.top-buttons a:hover {
    transform: translateY(-2px); /* 3px -> scaled */
    box-shadow: 0px 3.5px 10.5px rgba(0,0,0,0.4); /* scaled */
}

/* Event cards */
.event-card {
    border: none;
    border-radius: 14px; /* 20px -> scaled */
    overflow: hidden;
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(15px);
    box-shadow: 0 14px 28px rgba(0,0,0,0.5); /* 20px/40px -> scaled */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    color: #fff;
}

.event-card:hover {
    transform: translateY(-7px); /* 10px -> scaled */
    box-shadow: 0 21px 42px rgba(0,0,0,0.6); /* scaled */
}

/* Image wrapper */
.image-wrapper {
    width: 100%;
    height: 175px; /* 250px -> scaled */
    overflow: hidden;
    border-top-left-radius: 14px; /* 20px -> scaled */
    border-top-right-radius: 14px; /* 20px -> scaled */
}

.image-wrapper img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

/* Card body */
.card-body h5 {
    font-size: 1.05rem; /* 1.5rem -> scaled */
    font-weight: 800;
    margin-bottom: 10px; /* 15px -> scaled */
    color: #ffffff;
    text-shadow: 0.7px 0.7px 3px rgba(0,0,0,0.5); /* scaled */
}
.card-body p {
    font-size: 0.77rem; /* 1.1rem -> scaled */
    margin-bottom: 7px; /* 10px -> scaled */
    color: #e0e0e0;
}

/* Volunteer button */
.btn-custom {
    background: linear-gradient(135deg, #0072ff, #00c6ff);
    border: none;
    border-radius: 21px; /* 30px -> scaled */
    padding: 7px 14px; /* 10px/20px -> scaled */
    font-weight: 700;
    font-size: 0.7rem; /* scaled */
    color: #fff;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.btn-custom:hover {
    transform: translateY(-2px); /* 3px -> scaled */
    box-shadow: 0px 5.6px 14px rgba(0,0,0,0.5); /* scaled */
    color: #fff;
}

/* Responsive */
@@media (max-width: 992px) {
    .top-buttons {
        text-align: center;
        margin-bottom: 21px; /* 30px -> scaled */
    }
}
@@media (max-width: 768px) {
    .page-overlay h2 {
        font-size: 1.54rem; /* 2.2rem -> scaled */
    }
}
</style>

<div class="page-overlay">
    <div class="container">
        <h2>🌟 Upcoming Events 🌟</h2>

        <div class="text-center top-buttons mb-4">
            <a href="@Url.Action("AddEvent", "Events")" class="btn btn-primary">➕ Add Event</a>
            <a href="@Url.Action("Past", "Events")" class="btn btn-warning text-dark">📜 View Past Events</a>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="row">
                @foreach (var evt in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card event-card shadow-lg">
                            @if (!string.IsNullOrEmpty(evt.ImageUrl))
                            {
                                <div class="image-wrapper">
                                    <img src="@evt.ImageUrl" alt="@evt.Name" />
                                </div>
                            }
                            <div class="card-body">
                                <h5 class="card-title">@evt.Name</h5>
                                <p>@evt.Description</p>
                                <p><strong>Date:</strong> @(DateTime.TryParse(evt.Date, out var dt) ? dt.ToString("MMMM dd, yyyy") : evt.Date)</p>
                                <p><strong>Time:</strong> @evt.Time</p>
                                <a href="@Url.Action("Volunteer", "Events", new { eventId = evt.Id })" class="btn btn-custom">🤝 Volunteer</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info text-center">
                No upcoming events available at the moment.
            </div>
        }
    </div>
</div>
