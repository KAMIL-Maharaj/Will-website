@{
    ViewData["Title"] = "Register";
}

<style>
/* Same styling from Login page for consistency */
body {
    background: url('@Url.Content("~/Images/Background2.png")') no-repeat center center fixed;
    background-size: cover;
    min-height: 100vh;
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.main-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - 80px);
    padding-top: 100px;
    padding-bottom: 60px;
}

.auth-container {
    display: flex;
    background-color: #fff;
    border-radius: 30px;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    overflow: hidden;
    max-width: 1000px;
    width: 100%;
    margin: auto;
    min-height: 700px;
}

.auth-form {
    padding: 60px 60px;
    flex: 1;
}

.auth-image {
    flex: 1;
    background: url('@Url.Content("~/Images/logo.jpg")') center center no-repeat;
    background-size: contain;
    background-color: #ffffff;
    min-height: 700px;
    padding: 30px;
    border-left: 1.5px solid #e5e7eb;
}

.auth-title {
    font-size: 32px;
    font-weight: 900;
    color: #1e3a8a;
    margin-bottom: 30px;
    text-align: center;
}

label.form-label {
    font-weight: 700;
    font-size: 1.15rem;
}

input.form-control {
    font-size: 1rem;
    padding: 10px 12px;
    border-radius: 8px;
}

.form-control:focus {
    border-color: #6366f1;
    box-shadow: 0 0 0 0.3rem rgba(99, 102, 241, 0.3);
}

button.btn-primary {
    background-color: #4f46e5;
    border-color: #4f46e5;
    font-size: 1.15rem;
    padding: 12px 0;
    border-radius: 10px;
    font-weight: 700;
}

button.btn-danger {
    background-color: #db4437;
    border: none;
    font-size: 1.15rem;
    padding: 12px 0;
    border-radius: 10px;
    font-weight: 700;
}

.link-custom {
    color: #4f46e5;
    text-decoration: none;
    font-weight: 600;
}

.link-custom:hover {
    text-decoration: underline;
}

hr {
    margin: 40px 0 30px;
    border-color: #ddd;
}
</style>

<div class="main-wrapper">
    <div class="auth-container">
        <div class="auth-form">
            <h3 class="auth-title">Create Your Account âœ¨</h3>

            @if (!string.IsNullOrEmpty(ViewBag.Error as string))
            {
                <div class="alert alert-danger">@ViewBag.Error</div>
            }

            <form method="post" asp-action="Register">
                <div class="mb-4">
                    <label for="name" class="form-label">Full Name</label>
                    <input type="text" name="name" id="name" class="form-control" placeholder="Enter your name" required />
                </div>
                <div class="mb-4">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" name="email" id="email" class="form-control" placeholder="Enter your email" required />
                </div>
                <div class="mb-4">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" name="password" id="password" class="form-control" placeholder="Enter your password" required />
                </div>
                <button type="submit" class="btn btn-primary w-100">Register</button>
            </form>

            <div class="mt-4 text-center">
                <span class="text-muted">Already have an account?
                    <a class="link-custom" href="/Auth/Login">Login</a>
                </span>
            </div>

            <hr />
            <button id="google-register-btn" class="btn btn-danger w-100 mt-4">
                <i class="bi bi-google"></i> Sign up with Google
            </button>
        </div>

        <div class="auth-image d-none d-md-block"></div>
    </div>
</div>

@section Scripts {
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
        import { getAuth, GoogleAuthProvider, signInWithPopup } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";

        const firebaseConfig = {
            apiKey: "AIzaSyBEjxaEf_S9x9NZhmJrWwHLDdZvoyDajDg",
            authDomain: "alabaster-8cfcd.firebaseapp.com",
            projectId: "alabaster-8cfcd",
            storageBucket: "alabaster-8cfcd.appspot.com",
            messagingSenderId: "1014314025942",
            appId: "1:1014314025942:web:fedff22641b2b8bd219a77"
        };

        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);
        const provider = new GoogleAuthProvider();

        document.getElementById("google-register-btn").addEventListener("click", async () => {
            try {
                const result = await signInWithPopup(auth, provider);
                const idToken = await result.user.getIdToken();
                const resp = await fetch("/Auth/GoogleLogin", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(idToken)
                });
                const data = await resp.json();
                if (data.success) {
                    window.location.href = "/Home/Index";
                } else {
                    alert("Google Sign-Up failed: " + data.error);
                }
            } catch (err) {
                alert("Google Sign-Up Error: " + err.message);
            }
        });
    </script>
}
